<!DOCTYPE html>
<meta charset="utf-8">
<style>

#d3portfolio {
  width: 320px;
  height: 320px;
}
.chartLabel {
  font: 16px sans-serif;
  fill: #666;
}
.arcLabel {
  font: 10px sans-serif;
  fill: #fff;
}

</style>
<body>   
    <div id="d3portfolio"></div>
</body>

<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="lib/jquery-1.7.2.js"></script>
<script>
   
    inc = { labels: ['LCAP', 'MCAP', 'SCAP', 'Intl', 'Alt', 'Fixed'], pct: [0, 0, 0, 0, 0, 100] },

    data = inc;    

    var w = 750,                       // width and height, natch
    h = 750,
    r = Math.min(w, h) / 2,        // arc radius
    dur = 2000,                     // duration, in milliseconds
    color = d3.scale.category10(),
    donut = d3.layout.pie().sort(null),
    arc = d3.svg.arc().innerRadius(r - 10).outerRadius(0);

    // ---------------------------------------------------------------------
    var svg = d3.select("#d3portfolio").append("svg:svg")
    .attr("width", w).attr("height", h);

    var arc_grp = svg.append("svg:g")
    .attr("class", "arcGrp")
    .attr("transform", "translate(" + (w / 2) + "," + (h / 2) + ")");

    var label_group = svg.append("svg:g")
    .attr("class", "lblGroup")
    .attr("transform", "translate(" + (w / 2) + "," + (h / 2) + ")");

    // GROUP FOR CENTER TEXT
    var center_group = svg.append("svg:g")
    .attr("class", "ctrGroup")
    .attr("transform", "translate(" + (w / 2) + "," + (h / 2) + ")");

//    // CENTER LABEL
//    var pieLabel = center_group.append("svg:text")
//    .attr("dy", ".35em").attr("class", "chartLabel")
//    .attr("text-anchor", "middle")
//    .text(data.label);

    // DRAW ARC PATHS
    var arcs = arc_grp.selectAll("path")
    .data(donut(data.pct));
    arcs.enter().append("svg:path")
    .attr("stroke", "white")
    .attr("stroke-width", 0.5)
    .attr("fill", function (d, i) { return color(i); })
    .attr("d", arc)
    .each(function (d) { this._current = d })
    .on("click", function (d) {
        alert(d.data);
    });

    // DRAW SLICE LABELS
    var sliceLabel = label_group.selectAll("text")
    .data(donut(data.pct));
    sliceLabel.enter().append("svg:text")
    .attr("class", "arcLabel")
    .attr("transform", function (d) { return "translate(" + arc.centroid(d) + ")"; })
    .attr("text-anchor", "middle")
    

    // --------- "PAY NO ATTENTION TO THE MAN BEHIND THE CURTAIN" ---------

    // Store the currently-displayed angles in this._current.
    // Then, interpolate from this._current to the new angles.
    function arcTween(a) {
        var i = d3.interpolate(this._current, a);
        this._current = i(0);
        return function (t) {
            return arc(i(t));
        };
    }

    // update chart
    function updateChart(data) {        

        arcs.data(donut(data.pct)); // recompute angles, rebind data
        arcs.transition().ease("elastic").duration(dur).attrTween("d", arcTween);

        sliceLabel.data(donut(data.pct));
        sliceLabel.transition().ease("elastic").duration(dur)
        .attr("transform", function (d) { return "translate(" + arc.centroid(d) + ")"; })
        .style("fill-opacity", function (d) { return d.value == 0 ? 1e-6 : 1; })
        .text(function (d, i) {
            return data.labels[i]; 
        });

    }

    data = { labels: ['LCAP', 'MCAP', 'SCAP', 'Intl', 'Alt', 'Fixed'], pct: [5, 10, 6, 5, 14, 50] },

    updateChart(data);

</script>